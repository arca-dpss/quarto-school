#| echo: false
plot(rock$area, rock$peri)
ù
data = read.csv("data/dataset.csv")
colnames(data)
colnames(data) = c("anxiety", "flexibility", "mindfulness", "activity")
data$mindfulness = ifelse(data$mindfulness == "sì", "yes", no)
data$mindfulness = ifelse(data$mindfulness == "sì", "yes", "no")
write.table(data, file = "data/dataset.csv", row.names = FALSE, sep =",")
data = read.csv("C:/Users/Ottavia/Documents/GitHub/quarto-school/data/dataset.csv")
![With a figure!](img/peacock.png)
library(ggplot2)
ggplot(mtcars, aes(hp, mpg, color = am)) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess") +
theme(legend.position = 'bottom')
ggplot(mtcars2, aes(hp, mpg, color = factor(am))) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess") +
theme(legend.position = 'bottom')
ggplot(mtcars, aes(hp, mpg, color = factor(am))) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess") +
theme(legend.position = 'bottom')
library(kableExtra)
kable(mtcars[1:6, 1:6])
#| echo: true
kable(mtcars[1:6, 1:6])
kableExtra::kable(mtcars)
kable(mtcars, format = "html", table.attr = "style='width:100%;'")%>% kable_styling(
bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE,
position = "left"
) %>%
scroll_box(height = "400px", width = "100%")
kable(mtcars)%>% kable_styling(
bootstrap_options = c("striped", "hover", "condensed"),
full_width = FALSE,
position = "left"
) %>%
scroll_box(height = "450px", width = "100%")
#| column: margin
lm(hp ~ mpg*am, data = mtcars)
#| column: margin
datatable(mtcars,
options = list(pageLength = 5))
#| echo: fenced
kable(mtcars[1:6, 1:6])
#| lst-label: lst-import
#| lst-cap: Import pyplot
plot(cars)
ggplot(mtcars,
aes(hp, mpg, color = factor(am))) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess") +
theme(legend.position = 'bottom')
library(ggplot2)
ggplot(mtcars,
aes(hp, mpg, color = factor(am))) +
geom_point() +
geom_smooth(formula = y ~ x, method = "loess") +
theme(legend.position = 'bottom')
head(mtcars)
ggplot(mtcars,
aes(mpg, cyl)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, color = factor(gear))) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, color = gear)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, color = gear, size = gear)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, color = carb, size = gear)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point()
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth()
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "glm", family = "poisson")
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "glm", f method.args = list(family = "poisson"))
ggplot(mtcars,
aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "glm", method.args = list(family = "poisson"))
#| echo: true
#| eval: false
mtcars %>%
ggplot( aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "lm")
library(tidyverse)
mtcars %>%
ggplot( aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) + geom_violin(trim = FALSE, draw_quantiles = TRUE)
head(mtcars)
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_violin(trim = FALSE, draw_quantiles = TRUE)
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_violin(trim = FALSE, draw_quantiles = TRUE) +
stat_summary(fun.data=mean_sdl,
geom="pointrange",
color="black")
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_violin(trim = FALSE, draw_quantiles = .5) +
stat_summary(fun.data=mean_sdl,
geom="pointrange",
color="black")
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_violin(trim = FALSE, draw_quantiles = .25) +
stat_summary(fun.data=mean_sdl,
geom="pointrange",
color="black")
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_violin(trim = FALSE, draw_quantiles = c(.25, .5, 75)) +
stat_summary(fun.data=mean_sdl,
geom="pointrange",
color="black")
ggplot(mtcars,
aes(x = factor(cyl), y = mpg)) +
geom_boxplot() +
stat_summary(fun.data=mean_sdl,
geom="pointrange",
color="black")
mtcars %>%
ggplot( aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "lm")
library(tidyverse)
mtcars %>%
ggplot( aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth(method = "lm")
mtcars %>%
ggplot( aes(mpg, hp, size = gear)) +
geom_point() +
geom_smooth()
mtcars %>%
ggplot( aes(mpg, hp, color = gear)) +
geom_point() +
geom_smooth()
#| echo: true
#| output: fragment
graph = ggplot(rock,
aes(x = peri,
y = perm, size = area)) +
geom_point() + theme_light()
library(ggplot2)
library(plotly)
#| echo: true
#| output: fragment
graph = ggplot(rock,
aes(x = peri,
y = perm, size = area)) +
geom_point() + theme_light()
library(plotly)
plotly(graph)
dataset <- read.csv("~/GitHub/quarto-school/data/dataset.csv")
View(dataset)
ggplot(dataset,
aes(x = flexbility, y = anxiety, color = mindfulness)) +
geom_point()
ggplot(dataset,
aes(x = flexibility, y = anxiety, color = mindfulness)) +
geom_point()
library(shiny)
ui = fluidPage(
selectInput(inputId = "mySelection",
label = h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1)
verbatimTextOutput(
ui = fluidPage(
selectInput(inputId = "mySelection",
label = h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1),
verbatimTextOutput(
outputId = "myOutput"
))
server = function(input, output) {
output$myOutput = renderText({
paste(paste("This is my choice"), input$mySelection)
})
}
shinyApp(ui, server)
ui = fluidPage(
selectInput(inputId = "mySelection",
label = h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2, "Choice 3" = 3),
selected = 1),
verbatimTextOutput(
outputId = "myOutput"
)
)
server = function(input, output) {
output$myOutput = renderText({
paste(paste("This is my choice"), input$mySelection)
})
}
shinyApp(ui, server)
install.packages("leafleft")
install.packages("leaflet")
library(leaflet)
?addTiles
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.40471021673416, lat=11.884099423282022, popup="The birthplace of R")
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=45.40, lat=11.88, popup="Department of Statistics")
library(leaflet)
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
setView(lng = 11.88, lat = 45.40, zoom = 13) %>%
addMarkers(lng = 11.88, lat = 45.40, popup = "Department of Statistics")
leaflet() %>%
addTiles() %>%   %>%
leaflet() %>%
addTiles() %>%
addMarkers(lng = 11.88, lat = 45.40, popup = "Department of Statistics")
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
setView(lng = 11.88, lat = 45.40, zoom = 25) %>%
addMarkers(lng = 11.88, lat = 45.40, popup = "Department of Statistics")
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
setView(lng = 11.88, lat = 45.40, zoom = 18) %>%
addMarkers(lng = 11.88, lat = 45.40, popup = "Department of Statistics")
leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
setView(lng = 11.88, lat = 45.40, zoom = 13) %>%
addMarkers(lng = 11.88, lat = 45.40, popup = "Department of Statistics")
#| label: tbl-mtcars
#| tbl-cap: "This is a table!"
kable(mtcars[1:3,])
library(knitr)
#| label: tbl-mtcars
#| tbl-cap: "This is a table!"
kable(mtcars[1:3,])
library(kableExtra)
cite()
citation()
cite("ggplot2")
citation("ggplot2")
install.packages("sjPlot")
